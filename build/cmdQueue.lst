ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"cmdQueue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/cmdQueue.c"
  18              		.section	.text.createQueue,"ax",%progbits
  19              		.align	1
  20              		.global	createQueue
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	createQueue:
  26              	.LVL0:
  27              	.LFB40:
   1:Core/Src/cmdQueue.c **** #include "cmdQueue.h"
   2:Core/Src/cmdQueue.c **** 
   3:Core/Src/cmdQueue.c **** osSemaphoreId_t binarySem01CmdQueueHandle;
   4:Core/Src/cmdQueue.c **** 
   5:Core/Src/cmdQueue.c **** Cmd_Queue *createQueue(uint8_t cap, uint8_t itemBytes) {
  28              		.loc 1 5 56 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 5 56 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 0500     		movs	r5, r0
  41 0004 0C00     		movs	r4, r1
   6:Core/Src/cmdQueue.c ****     /* Create the semaphores(s) */
   7:Core/Src/cmdQueue.c ****     binarySem01CmdQueueHandle = osSemaphoreNew(1, 1, NULL);
  42              		.loc 1 7 5 is_stmt 1 view .LVU2
  43              		.loc 1 7 33 is_stmt 0 view .LVU3
  44 0006 0022     		movs	r2, #0
  45 0008 0121     		movs	r1, #1
  46              	.LVL1:
  47              		.loc 1 7 33 view .LVU4
  48 000a 0120     		movs	r0, #1
  49              	.LVL2:
  50              		.loc 1 7 33 view .LVU5
  51 000c FFF7FEFF 		bl	osSemaphoreNew
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 2


  52              	.LVL3:
  53              		.loc 1 7 31 discriminator 1 view .LVU6
  54 0010 0B4B     		ldr	r3, .L3
  55 0012 1860     		str	r0, [r3]
   8:Core/Src/cmdQueue.c ****     Cmd_Queue *q = NULL;
  56              		.loc 1 8 5 is_stmt 1 view .LVU7
  57              	.LVL4:
   9:Core/Src/cmdQueue.c ****     // Fail to create binary semaphore.
  10:Core/Src/cmdQueue.c ****     if (binarySem01CmdQueueHandle == NULL) {
  58              		.loc 1 10 5 view .LVU8
  59              		.loc 1 10 8 is_stmt 0 view .LVU9
  60 0014 0028     		cmp	r0, #0
  61 0016 12D0     		beq	.L1
  11:Core/Src/cmdQueue.c ****         return q;
  12:Core/Src/cmdQueue.c ****     }
  13:Core/Src/cmdQueue.c ****     uint16_t xQueueSizeInBytes = itemBytes * cap;
  62              		.loc 1 13 5 is_stmt 1 view .LVU10
  63              		.loc 1 13 14 is_stmt 0 view .LVU11
  64 0018 2800     		movs	r0, r5
  65 001a 6043     		muls	r0, r4
  66              	.LVL5:
  14:Core/Src/cmdQueue.c ****     q = (Cmd_Queue *)pvPortMalloc(xQueueSizeInBytes + sizeof(Cmd_Queue));
  67              		.loc 1 14 5 is_stmt 1 view .LVU12
  68              		.loc 1 14 22 is_stmt 0 view .LVU13
  69 001c 0C30     		adds	r0, r0, #12
  70              	.LVL6:
  71              		.loc 1 14 22 view .LVU14
  72 001e FFF7FEFF 		bl	pvPortMalloc
  73              	.LVL7:
  15:Core/Src/cmdQueue.c ****     if (q == NULL) {
  74              		.loc 1 15 5 is_stmt 1 view .LVU15
  75              		.loc 1 15 8 is_stmt 0 view .LVU16
  76 0022 0028     		cmp	r0, #0
  77 0024 0BD0     		beq	.L1
  16:Core/Src/cmdQueue.c ****         return q;
  17:Core/Src/cmdQueue.c ****     }
  18:Core/Src/cmdQueue.c ****     // storage area
  19:Core/Src/cmdQueue.c ****     q->data = ( uint16_t * )q + sizeof(Cmd_Queue);
  78              		.loc 1 19 5 is_stmt 1 view .LVU17
  79              		.loc 1 19 31 is_stmt 0 view .LVU18
  80 0026 0300     		movs	r3, r0
  81 0028 1833     		adds	r3, r3, #24
  82              		.loc 1 19 13 view .LVU19
  83 002a 8360     		str	r3, [r0, #8]
  20:Core/Src/cmdQueue.c ****     q->capacity = cap;
  84              		.loc 1 20 5 is_stmt 1 view .LVU20
  85              		.loc 1 20 17 is_stmt 0 view .LVU21
  86 002c 6DB2     		sxtb	r5, r5
  87              	.LVL8:
  88              		.loc 1 20 17 view .LVU22
  89 002e 8570     		strb	r5, [r0, #2]
  21:Core/Src/cmdQueue.c ****     q->front = 0;
  90              		.loc 1 21 5 is_stmt 1 view .LVU23
  91              		.loc 1 21 14 is_stmt 0 view .LVU24
  92 0030 0023     		movs	r3, #0
  93 0032 0370     		strb	r3, [r0]
  22:Core/Src/cmdQueue.c ****     q->back = -1;
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 3


  94              		.loc 1 22 5 is_stmt 1 view .LVU25
  95              		.loc 1 22 13 is_stmt 0 view .LVU26
  96 0034 FF22     		movs	r2, #255
  97 0036 4270     		strb	r2, [r0, #1]
  23:Core/Src/cmdQueue.c ****     q->itemBytes = itemBytes;
  98              		.loc 1 23 5 is_stmt 1 view .LVU27
  99              		.loc 1 23 18 is_stmt 0 view .LVU28
 100 0038 64B2     		sxtb	r4, r4
 101              	.LVL9:
 102              		.loc 1 23 18 view .LVU29
 103 003a C470     		strb	r4, [r0, #3]
  24:Core/Src/cmdQueue.c ****     q->itemNum = 0;
 104              		.loc 1 24 5 is_stmt 1 view .LVU30
 105              		.loc 1 24 16 is_stmt 0 view .LVU31
 106 003c 0371     		strb	r3, [r0, #4]
  25:Core/Src/cmdQueue.c ****     return q;
 107              		.loc 1 25 5 is_stmt 1 view .LVU32
 108              	.LVL10:
 109              	.L1:
  26:Core/Src/cmdQueue.c **** }
 110              		.loc 1 26 1 is_stmt 0 view .LVU33
 111              		@ sp needed
 112 003e 70BD     		pop	{r4, r5, r6, pc}
 113              	.L4:
 114              		.align	2
 115              	.L3:
 116 0040 00000000 		.word	binarySem01CmdQueueHandle
 117              		.cfi_endproc
 118              	.LFE40:
 120              		.section	.text.isQueueEmpty,"ax",%progbits
 121              		.align	1
 122              		.global	isQueueEmpty
 123              		.syntax unified
 124              		.code	16
 125              		.thumb_func
 127              	isQueueEmpty:
 128              	.LVL11:
 129              	.LFB41:
  27:Core/Src/cmdQueue.c **** 
  28:Core/Src/cmdQueue.c **** uint8_t isQueueEmpty(Cmd_Queue *q) {
 130              		.loc 1 28 36 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		.loc 1 28 36 is_stmt 0 view .LVU35
 135 0000 70B5     		push	{r4, r5, r6, lr}
 136              	.LCFI1:
 137              		.cfi_def_cfa_offset 16
 138              		.cfi_offset 4, -16
 139              		.cfi_offset 5, -12
 140              		.cfi_offset 6, -8
 141              		.cfi_offset 14, -4
 142 0002 0400     		movs	r4, r0
  29:Core/Src/cmdQueue.c ****     osSemaphoreAcquire(binarySem01CmdQueueHandle, osWaitForever);
 143              		.loc 1 29 5 is_stmt 1 view .LVU36
 144 0004 0121     		movs	r1, #1
 145 0006 074D     		ldr	r5, .L6
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 4


 146 0008 2868     		ldr	r0, [r5]
 147              	.LVL12:
 148              		.loc 1 29 5 is_stmt 0 view .LVU37
 149 000a 4942     		rsbs	r1, r1, #0
 150 000c FFF7FEFF 		bl	osSemaphoreAcquire
 151              	.LVL13:
  30:Core/Src/cmdQueue.c ****     uint8_t res = (q->itemNum == 0);
 152              		.loc 1 30 5 is_stmt 1 view .LVU38
 153              		.loc 1 30 21 is_stmt 0 view .LVU39
 154 0010 2479     		ldrb	r4, [r4, #4]
 155              	.LVL14:
 156              		.loc 1 30 31 view .LVU40
 157 0012 6342     		rsbs	r3, r4, #0
 158 0014 5C41     		adcs	r4, r4, r3
 159 0016 E4B2     		uxtb	r4, r4
 160              	.LVL15:
  31:Core/Src/cmdQueue.c ****     osSemaphoreRelease(binarySem01CmdQueueHandle);
 161              		.loc 1 31 5 is_stmt 1 view .LVU41
 162 0018 2868     		ldr	r0, [r5]
 163 001a FFF7FEFF 		bl	osSemaphoreRelease
 164              	.LVL16:
  32:Core/Src/cmdQueue.c ****     return res;
 165              		.loc 1 32 5 view .LVU42
  33:Core/Src/cmdQueue.c **** }
 166              		.loc 1 33 1 is_stmt 0 view .LVU43
 167 001e 2000     		movs	r0, r4
 168              		@ sp needed
 169              	.LVL17:
 170              		.loc 1 33 1 view .LVU44
 171 0020 70BD     		pop	{r4, r5, r6, pc}
 172              	.L7:
 173 0022 C046     		.align	2
 174              	.L6:
 175 0024 00000000 		.word	binarySem01CmdQueueHandle
 176              		.cfi_endproc
 177              	.LFE41:
 179              		.section	.text.isQueueFull,"ax",%progbits
 180              		.align	1
 181              		.global	isQueueFull
 182              		.syntax unified
 183              		.code	16
 184              		.thumb_func
 186              	isQueueFull:
 187              	.LVL18:
 188              	.LFB42:
  34:Core/Src/cmdQueue.c **** 
  35:Core/Src/cmdQueue.c **** uint8_t isQueueFull(Cmd_Queue *q) {
 189              		.loc 1 35 35 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		.loc 1 35 35 is_stmt 0 view .LVU46
 194 0000 70B5     		push	{r4, r5, r6, lr}
 195              	.LCFI2:
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 4, -16
 198              		.cfi_offset 5, -12
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 5


 199              		.cfi_offset 6, -8
 200              		.cfi_offset 14, -4
 201 0002 0500     		movs	r5, r0
  36:Core/Src/cmdQueue.c ****     osSemaphoreAcquire(binarySem01CmdQueueHandle, osWaitForever);
 202              		.loc 1 36 5 is_stmt 1 view .LVU47
 203 0004 0121     		movs	r1, #1
 204 0006 094E     		ldr	r6, .L9
 205 0008 3068     		ldr	r0, [r6]
 206              	.LVL19:
 207              		.loc 1 36 5 is_stmt 0 view .LVU48
 208 000a 4942     		rsbs	r1, r1, #0
 209 000c FFF7FEFF 		bl	osSemaphoreAcquire
 210              	.LVL20:
  37:Core/Src/cmdQueue.c ****     uint8_t res =(q->itemNum == q->capacity);
 211              		.loc 1 37 5 is_stmt 1 view .LVU49
 212              		.loc 1 37 20 is_stmt 0 view .LVU50
 213 0010 2C79     		ldrb	r4, [r5, #4]
 214 0012 64B2     		sxtb	r4, r4
 215              		.loc 1 37 34 view .LVU51
 216 0014 AB78     		ldrb	r3, [r5, #2]
 217 0016 5BB2     		sxtb	r3, r3
 218              		.loc 1 37 30 view .LVU52
 219 0018 E41A     		subs	r4, r4, r3
 220 001a 6342     		rsbs	r3, r4, #0
 221 001c 5C41     		adcs	r4, r4, r3
 222 001e E4B2     		uxtb	r4, r4
 223              	.LVL21:
  38:Core/Src/cmdQueue.c ****     osSemaphoreRelease(binarySem01CmdQueueHandle);
 224              		.loc 1 38 5 is_stmt 1 view .LVU53
 225 0020 3068     		ldr	r0, [r6]
 226 0022 FFF7FEFF 		bl	osSemaphoreRelease
 227              	.LVL22:
  39:Core/Src/cmdQueue.c ****     return res;
 228              		.loc 1 39 5 view .LVU54
  40:Core/Src/cmdQueue.c **** }
 229              		.loc 1 40 1 is_stmt 0 view .LVU55
 230 0026 2000     		movs	r0, r4
 231              		@ sp needed
 232              	.LVL23:
 233              	.LVL24:
 234              		.loc 1 40 1 view .LVU56
 235 0028 70BD     		pop	{r4, r5, r6, pc}
 236              	.L10:
 237 002a C046     		.align	2
 238              	.L9:
 239 002c 00000000 		.word	binarySem01CmdQueueHandle
 240              		.cfi_endproc
 241              	.LFE42:
 243              		.global	__aeabi_idivmod
 244              		.section	.text.queuePush,"ax",%progbits
 245              		.align	1
 246              		.global	queuePush
 247              		.syntax unified
 248              		.code	16
 249              		.thumb_func
 251              	queuePush:
 252              	.LVL25:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 6


 253              	.LFB43:
  41:Core/Src/cmdQueue.c **** 
  42:Core/Src/cmdQueue.c **** int queuePush(Cmd_Queue *q, uint16_t item) {
 254              		.loc 1 42 44 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		.loc 1 42 44 is_stmt 0 view .LVU58
 259 0000 70B5     		push	{r4, r5, r6, lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 4, -16
 263              		.cfi_offset 5, -12
 264              		.cfi_offset 6, -8
 265              		.cfi_offset 14, -4
 266 0002 0400     		movs	r4, r0
 267 0004 0D00     		movs	r5, r1
  43:Core/Src/cmdQueue.c ****     osSemaphoreAcquire(binarySem01CmdQueueHandle, osWaitForever);
 268              		.loc 1 43 5 is_stmt 1 view .LVU59
 269 0006 0121     		movs	r1, #1
 270              	.LVL26:
 271              		.loc 1 43 5 is_stmt 0 view .LVU60
 272 0008 144B     		ldr	r3, .L15
 273 000a 1868     		ldr	r0, [r3]
 274              	.LVL27:
 275              		.loc 1 43 5 view .LVU61
 276 000c 4942     		rsbs	r1, r1, #0
 277 000e FFF7FEFF 		bl	osSemaphoreAcquire
 278              	.LVL28:
  44:Core/Src/cmdQueue.c ****     if (q->itemNum == q->capacity) {
 279              		.loc 1 44 5 is_stmt 1 view .LVU62
 280              		.loc 1 44 10 is_stmt 0 view .LVU63
 281 0012 2279     		ldrb	r2, [r4, #4]
 282 0014 52B2     		sxtb	r2, r2
 283              		.loc 1 44 24 view .LVU64
 284 0016 A378     		ldrb	r3, [r4, #2]
 285 0018 5BB2     		sxtb	r3, r3
 286              		.loc 1 44 8 view .LVU65
 287 001a 9A42     		cmp	r2, r3
 288 001c 16D0     		beq	.L14
  45:Core/Src/cmdQueue.c ****         osSemaphoreRelease(binarySem01CmdQueueHandle);
  46:Core/Src/cmdQueue.c ****         return -1;
  47:Core/Src/cmdQueue.c ****     }
  48:Core/Src/cmdQueue.c ****     int pos = (q->back + 1) % q->capacity;
 289              		.loc 1 48 5 is_stmt 1 view .LVU66
 290              		.loc 1 48 17 is_stmt 0 view .LVU67
 291 001e 6078     		ldrb	r0, [r4, #1]
 292 0020 40B2     		sxtb	r0, r0
 293              		.loc 1 48 24 view .LVU68
 294 0022 0130     		adds	r0, r0, #1
 295              		.loc 1 48 32 view .LVU69
 296 0024 A178     		ldrb	r1, [r4, #2]
 297 0026 49B2     		sxtb	r1, r1
 298              		.loc 1 48 9 view .LVU70
 299 0028 FFF7FEFF 		bl	__aeabi_idivmod
 300              	.LVL29:
  49:Core/Src/cmdQueue.c ****     q->back = pos;
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 7


 301              		.loc 1 49 5 is_stmt 1 view .LVU71
 302              		.loc 1 49 13 is_stmt 0 view .LVU72
 303 002c 4BB2     		sxtb	r3, r1
 304 002e 6370     		strb	r3, [r4, #1]
  50:Core/Src/cmdQueue.c ****     q->data[pos] = item;
 305              		.loc 1 50 5 is_stmt 1 view .LVU73
 306              		.loc 1 50 6 is_stmt 0 view .LVU74
 307 0030 A268     		ldr	r2, [r4, #8]
 308              		.loc 1 50 12 view .LVU75
 309 0032 4B00     		lsls	r3, r1, #1
 310 0034 D318     		adds	r3, r2, r3
 311              		.loc 1 50 18 view .LVU76
 312 0036 1D80     		strh	r5, [r3]
  51:Core/Src/cmdQueue.c ****     q->itemNum += 1;
 313              		.loc 1 51 5 is_stmt 1 view .LVU77
 314              		.loc 1 51 6 is_stmt 0 view .LVU78
 315 0038 2379     		ldrb	r3, [r4, #4]
 316              		.loc 1 51 16 view .LVU79
 317 003a 0133     		adds	r3, r3, #1
 318 003c 5BB2     		sxtb	r3, r3
 319 003e 2371     		strb	r3, [r4, #4]
  52:Core/Src/cmdQueue.c ****     osSemaphoreRelease(binarySem01CmdQueueHandle);
 320              		.loc 1 52 5 is_stmt 1 view .LVU80
 321 0040 064B     		ldr	r3, .L15
 322 0042 1868     		ldr	r0, [r3]
 323 0044 FFF7FEFF 		bl	osSemaphoreRelease
 324              	.LVL30:
  53:Core/Src/cmdQueue.c ****     return 0;
 325              		.loc 1 53 5 view .LVU81
 326              		.loc 1 53 12 is_stmt 0 view .LVU82
 327 0048 0020     		movs	r0, #0
 328              	.LVL31:
 329              	.L11:
  54:Core/Src/cmdQueue.c **** }
 330              		.loc 1 54 1 view .LVU83
 331              		@ sp needed
 332              	.LVL32:
 333              	.LVL33:
 334              		.loc 1 54 1 view .LVU84
 335 004a 70BD     		pop	{r4, r5, r6, pc}
 336              	.LVL34:
 337              	.L14:
  45:Core/Src/cmdQueue.c ****         return -1;
 338              		.loc 1 45 9 is_stmt 1 view .LVU85
 339 004c 034B     		ldr	r3, .L15
 340 004e 1868     		ldr	r0, [r3]
 341 0050 FFF7FEFF 		bl	osSemaphoreRelease
 342              	.LVL35:
  46:Core/Src/cmdQueue.c ****     }
 343              		.loc 1 46 9 view .LVU86
  46:Core/Src/cmdQueue.c ****     }
 344              		.loc 1 46 16 is_stmt 0 view .LVU87
 345 0054 0120     		movs	r0, #1
 346 0056 4042     		rsbs	r0, r0, #0
 347 0058 F7E7     		b	.L11
 348              	.L16:
 349 005a C046     		.align	2
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 8


 350              	.L15:
 351 005c 00000000 		.word	binarySem01CmdQueueHandle
 352              		.cfi_endproc
 353              	.LFE43:
 355              		.section	.text.queuePop,"ax",%progbits
 356              		.align	1
 357              		.global	queuePop
 358              		.syntax unified
 359              		.code	16
 360              		.thumb_func
 362              	queuePop:
 363              	.LVL36:
 364              	.LFB44:
  55:Core/Src/cmdQueue.c **** 
  56:Core/Src/cmdQueue.c **** uint16_t queuePop(Cmd_Queue *q) {
 365              		.loc 1 56 33 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		.loc 1 56 33 is_stmt 0 view .LVU89
 370 0000 70B5     		push	{r4, r5, r6, lr}
 371              	.LCFI4:
 372              		.cfi_def_cfa_offset 16
 373              		.cfi_offset 4, -16
 374              		.cfi_offset 5, -12
 375              		.cfi_offset 6, -8
 376              		.cfi_offset 14, -4
 377 0002 0400     		movs	r4, r0
  57:Core/Src/cmdQueue.c ****     osSemaphoreAcquire(binarySem01CmdQueueHandle, osWaitForever);
 378              		.loc 1 57 5 is_stmt 1 view .LVU90
 379 0004 0121     		movs	r1, #1
 380 0006 144B     		ldr	r3, .L21
 381 0008 1868     		ldr	r0, [r3]
 382              	.LVL37:
 383              		.loc 1 57 5 is_stmt 0 view .LVU91
 384 000a 4942     		rsbs	r1, r1, #0
 385 000c FFF7FEFF 		bl	osSemaphoreAcquire
 386              	.LVL38:
  58:Core/Src/cmdQueue.c ****     if (q->itemNum == 0) {
 387              		.loc 1 58 5 is_stmt 1 view .LVU92
 388              		.loc 1 58 10 is_stmt 0 view .LVU93
 389 0010 2379     		ldrb	r3, [r4, #4]
 390              		.loc 1 58 8 view .LVU94
 391 0012 002B     		cmp	r3, #0
 392 0014 1AD0     		beq	.L20
  59:Core/Src/cmdQueue.c ****         osSemaphoreRelease(binarySem01CmdQueueHandle);
  60:Core/Src/cmdQueue.c ****         return -1;
  61:Core/Src/cmdQueue.c ****     }
  62:Core/Src/cmdQueue.c ****     uint16_t item = q->data[q->front];
 393              		.loc 1 62 5 is_stmt 1 view .LVU95
 394              		.loc 1 62 22 is_stmt 0 view .LVU96
 395 0016 A268     		ldr	r2, [r4, #8]
 396              		.loc 1 62 30 view .LVU97
 397 0018 2378     		ldrb	r3, [r4]
 398 001a 5BB2     		sxtb	r3, r3
 399              		.loc 1 62 28 view .LVU98
 400 001c 5B00     		lsls	r3, r3, #1
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 9


 401 001e D318     		adds	r3, r2, r3
 402              		.loc 1 62 14 view .LVU99
 403 0020 1D88     		ldrh	r5, [r3]
 404 0022 ADB2     		uxth	r5, r5
 405              	.LVL39:
  63:Core/Src/cmdQueue.c ****     q->front = ((q->front + 1) % q->capacity);
 406              		.loc 1 63 5 is_stmt 1 view .LVU100
 407              		.loc 1 63 19 is_stmt 0 view .LVU101
 408 0024 2078     		ldrb	r0, [r4]
 409 0026 40B2     		sxtb	r0, r0
 410              		.loc 1 63 27 view .LVU102
 411 0028 0130     		adds	r0, r0, #1
 412              		.loc 1 63 35 view .LVU103
 413 002a A178     		ldrb	r1, [r4, #2]
 414 002c 49B2     		sxtb	r1, r1
 415              		.loc 1 63 32 view .LVU104
 416 002e FFF7FEFF 		bl	__aeabi_idivmod
 417              	.LVL40:
 418              		.loc 1 63 14 view .LVU105
 419 0032 49B2     		sxtb	r1, r1
 420 0034 2170     		strb	r1, [r4]
  64:Core/Src/cmdQueue.c ****     q->itemNum--;
 421              		.loc 1 64 5 is_stmt 1 view .LVU106
 422              		.loc 1 64 6 is_stmt 0 view .LVU107
 423 0036 2379     		ldrb	r3, [r4, #4]
 424 0038 5BB2     		sxtb	r3, r3
 425              		.loc 1 64 15 view .LVU108
 426 003a 013B     		subs	r3, r3, #1
 427 003c 5BB2     		sxtb	r3, r3
 428 003e 2371     		strb	r3, [r4, #4]
  65:Core/Src/cmdQueue.c ****     osSemaphoreRelease(binarySem01CmdQueueHandle);
 429              		.loc 1 65 5 is_stmt 1 view .LVU109
 430 0040 054B     		ldr	r3, .L21
 431 0042 1868     		ldr	r0, [r3]
 432 0044 FFF7FEFF 		bl	osSemaphoreRelease
 433              	.LVL41:
  66:Core/Src/cmdQueue.c ****     return item;
 434              		.loc 1 66 5 view .LVU110
 435              	.L19:
  67:Core/Src/cmdQueue.c **** }
 436              		.loc 1 67 1 is_stmt 0 view .LVU111
 437 0048 2800     		movs	r0, r5
 438              		@ sp needed
 439              	.LVL42:
 440              		.loc 1 67 1 view .LVU112
 441 004a 70BD     		pop	{r4, r5, r6, pc}
 442              	.LVL43:
 443              	.L20:
  59:Core/Src/cmdQueue.c ****         return -1;
 444              		.loc 1 59 9 is_stmt 1 view .LVU113
 445 004c 024B     		ldr	r3, .L21
 446 004e 1868     		ldr	r0, [r3]
 447 0050 FFF7FEFF 		bl	osSemaphoreRelease
 448              	.LVL44:
  60:Core/Src/cmdQueue.c ****     }
 449              		.loc 1 60 9 view .LVU114
  60:Core/Src/cmdQueue.c ****     }
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 10


 450              		.loc 1 60 16 is_stmt 0 view .LVU115
 451 0054 014D     		ldr	r5, .L21+4
 452 0056 F7E7     		b	.L19
 453              	.L22:
 454              		.align	2
 455              	.L21:
 456 0058 00000000 		.word	binarySem01CmdQueueHandle
 457 005c FFFF0000 		.word	65535
 458              		.cfi_endproc
 459              	.LFE44:
 461              		.section	.text.freeQueue,"ax",%progbits
 462              		.align	1
 463              		.global	freeQueue
 464              		.syntax unified
 465              		.code	16
 466              		.thumb_func
 468              	freeQueue:
 469              	.LVL45:
 470              	.LFB45:
  68:Core/Src/cmdQueue.c **** 
  69:Core/Src/cmdQueue.c **** void freeQueue(Cmd_Queue* q) {
 471              		.loc 1 69 30 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		.loc 1 69 30 is_stmt 0 view .LVU117
 476 0000 70B5     		push	{r4, r5, r6, lr}
 477              	.LCFI5:
 478              		.cfi_def_cfa_offset 16
 479              		.cfi_offset 4, -16
 480              		.cfi_offset 5, -12
 481              		.cfi_offset 6, -8
 482              		.cfi_offset 14, -4
 483 0002 0400     		movs	r4, r0
  70:Core/Src/cmdQueue.c ****     osSemaphoreAcquire(binarySem01CmdQueueHandle, osWaitForever);
 484              		.loc 1 70 5 is_stmt 1 view .LVU118
 485 0004 0121     		movs	r1, #1
 486 0006 064D     		ldr	r5, .L24
 487 0008 2868     		ldr	r0, [r5]
 488              	.LVL46:
 489              		.loc 1 70 5 is_stmt 0 view .LVU119
 490 000a 4942     		rsbs	r1, r1, #0
 491 000c FFF7FEFF 		bl	osSemaphoreAcquire
 492              	.LVL47:
  71:Core/Src/cmdQueue.c **** 	vPortFree(q);
 493              		.loc 1 71 2 is_stmt 1 view .LVU120
 494 0010 2000     		movs	r0, r4
 495 0012 FFF7FEFF 		bl	vPortFree
 496              	.LVL48:
  72:Core/Src/cmdQueue.c ****     osSemaphoreRelease(binarySem01CmdQueueHandle);
 497              		.loc 1 72 5 view .LVU121
 498 0016 2868     		ldr	r0, [r5]
 499 0018 FFF7FEFF 		bl	osSemaphoreRelease
 500              	.LVL49:
  73:Core/Src/cmdQueue.c **** }
 501              		.loc 1 73 1 is_stmt 0 view .LVU122
 502              		@ sp needed
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 11


 503              	.LVL50:
 504              		.loc 1 73 1 view .LVU123
 505 001c 70BD     		pop	{r4, r5, r6, pc}
 506              	.L25:
 507 001e C046     		.align	2
 508              	.L24:
 509 0020 00000000 		.word	binarySem01CmdQueueHandle
 510              		.cfi_endproc
 511              	.LFE45:
 513              		.global	binarySem01CmdQueueHandle
 514              		.section	.bss.binarySem01CmdQueueHandle,"aw",%nobits
 515              		.align	2
 518              	binarySem01CmdQueueHandle:
 519 0000 00000000 		.space	4
 520              		.text
 521              	.Letext0:
 522              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 523              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 524              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 525              		.file 5 "Core/Inc/cmdQueue.h"
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 cmdQueue.c
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:19     .text.createQueue:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:25     .text.createQueue:00000000 createQueue
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:116    .text.createQueue:00000040 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:518    .bss.binarySem01CmdQueueHandle:00000000 binarySem01CmdQueueHandle
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:121    .text.isQueueEmpty:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:127    .text.isQueueEmpty:00000000 isQueueEmpty
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:175    .text.isQueueEmpty:00000024 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:180    .text.isQueueFull:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:186    .text.isQueueFull:00000000 isQueueFull
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:239    .text.isQueueFull:0000002c $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:245    .text.queuePush:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:251    .text.queuePush:00000000 queuePush
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:351    .text.queuePush:0000005c $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:356    .text.queuePop:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:362    .text.queuePop:00000000 queuePop
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:456    .text.queuePop:00000058 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:462    .text.freeQueue:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:468    .text.freeQueue:00000000 freeQueue
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:509    .text.freeQueue:00000020 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccD42ofw.s:515    .bss.binarySem01CmdQueueHandle:00000000 $d

UNDEFINED SYMBOLS
osSemaphoreNew
pvPortMalloc
osSemaphoreAcquire
osSemaphoreRelease
__aeabi_idivmod
vPortFree
